{
  "version": "1.0",
  "name": "Citizen Shield Policy",
  "description": "Security and integrity policy for civic-grade AI systems",
  "rules": [
    {
      "id": "input_sanitization",
      "name": "Input Sanitization",
      "description": "All user inputs must be sanitized before processing",
      "severity": "critical",
      "enforcement": "block",
      "conditions": {
        "input_validation": {
          "required": true,
          "max_length": 10000,
          "allowed_patterns": ["^[a-zA-Z0-9\\s\\-_.,!?@#$%^&*()+=<>:;\"'\\[\\]{}|\\\\/`~]*$"],
          "blocked_patterns": ["<script", "javascript:", "data:", "vbscript:"]
        }
      }
    },
    {
      "id": "output_encoding",
      "name": "Output Encoding",
      "description": "All outputs must be properly encoded to prevent XSS",
      "severity": "high",
      "enforcement": "block",
      "conditions": {
        "output_validation": {
          "html_encoding": true,
          "json_escaping": true,
          "url_encoding": true
        }
      }
    },
    {
      "id": "authentication_required",
      "name": "Authentication Required",
      "description": "All endpoints require proper authentication",
      "severity": "high",
      "enforcement": "block",
      "exceptions": [
        "/api/health",
        "/api/integrity-check",
        "/api/metrics"
      ],
      "conditions": {
        "auth_validation": {
          "jwt_required": true,
          "token_expiry_check": true,
          "role_validation": true
        }
      }
    },
    {
      "id": "rate_limiting",
      "name": "Rate Limiting",
      "description": "Implement rate limiting to prevent abuse",
      "severity": "medium",
      "enforcement": "throttle",
      "conditions": {
        "rate_limits": {
          "requests_per_minute": 100,
          "burst_limit": 20,
          "window_size": 60
        }
      }
    },
    {
      "id": "data_validation",
      "name": "Data Validation",
      "description": "All data must pass schema validation",
      "severity": "high",
      "enforcement": "block",
      "conditions": {
        "schema_validation": {
          "json_schema": true,
          "required_fields": true,
          "type_checking": true
        }
      }
    },
    {
      "id": "integrity_check",
      "name": "Integrity Check",
      "description": "All responses must include integrity verification",
      "severity": "critical",
      "enforcement": "block",
      "conditions": {
        "integrity_validation": {
          "checksum_required": true,
          "signature_verification": true,
          "timestamp_validation": true
        }
      }
    }
  ],
  "anomaly_detection": {
    "enabled": true,
    "thresholds": {
      "request_rate_spike": 2.0,
      "error_rate_spike": 5.0,
      "latency_spike": 3.0,
      "unusual_patterns": true
    },
    "response": {
      "alert": true,
      "log": true,
      "block": false,
      "escalate": true
    }
  },
  "monitoring": {
    "metrics": [
      "request_count",
      "error_count",
      "response_time",
      "integrity_score",
      "anomaly_score"
    ],
    "alerts": [
      {
        "name": "High Error Rate",
        "condition": "error_rate > 0.05",
        "severity": "critical"
      },
      {
        "name": "Integrity Check Failed",
        "condition": "integrity_score < 0.9",
        "severity": "critical"
      },
      {
        "name": "Anomaly Detected",
        "condition": "anomaly_score > 0.8",
        "severity": "warning"
      }
    ]
  }
}